import { test, expect } from '@playwright/test';

/*DOM, yani Document Object Model, bir web sayfasƒ±nƒ±n HTML yapƒ±sƒ±nƒ±n tarayƒ±cƒ± tarafƒ±ndan olu≈üturulmu≈ü canlƒ± halidir.yani iskeletidir */

test.describe("assertions", async () => {

  test("hard assertions", async ({ page }) => {
    await page.goto("https://demoblaze.com/");
    await expect(page).toHaveURL(/demoblaze\.com/); // regex ile daha g√ºvenli
    await expect(page).toHaveTitle("STORE");
    await expect(page.getByText("Place Order").nth(1)).not.toBeAttached();// ‚ÄúSayfadaki ikinci 'Place Order' yazƒ±sƒ±na sahip elementin, ≈üu anda DOM‚Äôa baƒülƒ± olmadƒ±ƒüƒ±nƒ± (sayfada olmadƒ±ƒüƒ±nƒ±) doƒürula.‚Äù
    //yani place order yazisini ana sayfaada bulup sonra onrada olmadigini kontrol ediyor ama nth(1) demek bundan 2 tane var demek ve bana 2. sini bul demek
    /*üîπ Bu ne yapƒ±yor? page.getByText("Place Order") ‚Üí Sayfada ‚ÄúPlace Order‚Äù yazan t√ºm elementleri buluyor..nth(1)‚Üí Bu bulduƒüu elementler arasƒ±nda 2. sƒ±radakini alƒ±yor.√á√ºnk√º sayma sƒ±fƒ±rdan ba≈ülƒ±yor, yani:nth(0) ‚Üí 1. element nth(1) ‚Üí 2. element (senin dediƒüin gibi).not.toBeAttached()‚Üí Bu 2. ‚ÄúPlace Order‚Äù elementinin ≈üu anda DOM‚Äôda olmadƒ±ƒüƒ±nƒ± (yani silinmi≈ü / kaldƒ±rƒ±lmƒ±≈ü olduƒüunu) kontrol ediyor. */
    //bu kodda not degrini cali≈ütirssan hgata verecek cunku kodun o kisminda place order yazisi yok yani not olmali


  });


  test("autimation practice", async ({ page }) => {
    await page.goto("https://testautomationpractice.blogspot.com/");
    // await page.locator('#male').check();
    //bu kod male aidisine sahip kutuyu bulup i≈üaretler
    // await expect(page.locator('#male')).toBeChecked();
    //bu ise male aidisine sahip butonu bulup i≈üaretli olup olmadigini kontrol eder

    // await expect(page.locator()).toBeDisabled();



    await expect(page.locator("#name")).toBeEmpty();//name isimli id degerinine sahip olan ksimin i√ßerisnin  bos olup olamdigini kontrol eder
    await page.fill('#name', 'emircan');//name id sinine sahip sayfaya emircan yerlestirdim ve sonra o degerin eklenip eklenmedigini kontrol ettim dogru mu anladim
    await expect(page.locator("#name")).toHaveValue("emircan");
    //yukerdaki metotlae once bos olup olmadigini kontrol eder sonra olaraya emircan yazar en sonra da orada emircan yazip yazmadigini kontrol ediyor

    //  await expect(page.locator("#wikipedia-icon")).toHaveScreenshot();//onceden yuklenmis ekran goruntusunun su an var olup olmadigini kontrol eder


    //await expect(page.locator("")).toHaveTitle("Form Elements")  BU metot isse girilern basligin olp olmadigini kontorl eder





  })
  test("new site", async ({ page }) => {

    await page.goto("https://demoqa.com/");

    await expect(page.getByText("Book Store Application")).toContainText("Book ");//bu yazin i√ßinde buna benzer bir yazinin olup olmadigini kontrol eder
    

    await expect(page.getByText("Book Store Application")).toHaveText("Book Store Application");//ayni metinden aynisi olmasi laizm
    


  })
})


